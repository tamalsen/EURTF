create sequence eurtf_trans_id start with 100 increment by 1;

delimiter |
CREATE TRIGGER cascade_update_agent_trans AFTER UPDATE ON eurtf_monitoring_projects FOR EACH ROW 
begin
UPDATE eurtf_agents SET proj_id = new.proj_id WHERE proj_id = old.proj_id;
UPDATE eurtf_transactions SET proj_id = new.proj_id WHERE proj_id = old.proj_id;
end;
| delimiter;



 





CREATE TRIGGER cascade_update_trans2 AFTER UPDATE ON eurtf_agents FOR EACH ROW UPDATE eurtf_transactions SET agent_id = new.agent_id WHERE agent_id = old.agent_id; 


create table eurtf_users(user_name  varchar(20) primary key,password varchar(16) not null,privilege varchar (1) not null check(privilege in('A','U')));


create table eurtf_agents(agent_id varchar(10) primary key,agent_name varchar(30) not null,location varchar(20) not null,ip_addr varchar(15) not null,comments varchar(50),proj_id varchar(10) default null, foreign key (proj_id) references eurtf_monitoring_projects(proj_id) on delete set null) ENGINE=INNODB;



create table eurtf_monitoring_projects(proj_id varchar(10) primary key,proj_name varchar(30) not null,start_date datetime  not null,end_date datetime  not null,status varchar(20) default 'In progress',description varchar(50)) ENGINE=INNODB;


create table eurtf_transactions(transaction_id mediumint auto_increment primary key,transaction_name varchar(20) not null,agent_id varchar(10) default null references eurtf_agents(agent_id) on delete set null,proj_id varchar(10) default null references eurtf_monitoring_projects(proj_id) on delete set null,page_load_time double(8,4) not null,time_to_first_byte double(8,4) not null,time_to_start_render double(8,4) not null,time_to_fully_loaded double(8,4) not null,ifile varchar(100),dfile varchar(100),trans_date datetime not null)ENGINE =INNODB;
